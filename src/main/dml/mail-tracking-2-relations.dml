enum module.mailtracking.domain.DocumentType as DocumentType;
enum module.mailtracking.domain.DocumentState as DocumentState;

class module.mailtracking.domain.Document extends org.fenixedu.bennu.io.domain.GenericFile {
	String description;
	DocumentType type;
	DocumentState state;
}

relation BennuCorrespondenceEntry {
	org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
	module.mailtracking.domain.CorrespondenceEntry playsRole correspondenceEntries {
		multiplicity *;
	}
}

relation BennuDocument {
	org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
	module.mailtracking.domain.Document playsRole mailTrackingDocuments {
		multiplicity *;
	}
}

relation CorrepondenceEntryDocument {
	module.mailtracking.domain.Document playsRole documents {
		multiplicity *;
	}
	
	module.mailtracking.domain.CorrespondenceEntry playsRole correspondenceEntry;
}

relation CorrepondenceEntryCorrespondenceEntryLog {
	module.mailtracking.domain.CorrespondenceEntryLog playsRole logs {
		multiplicity *;
	}
	module.mailtracking.domain.CorrespondenceEntry playsRole correspondenceEntry;
}

relation BennuMailTracking {
	org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
	module.mailtracking.domain.MailTracking playsRole mailTrackings {
		multiplicity *;
	}
}

relation MailTrackingUnit {
	module.organization.domain.Unit playsRole unit;
	module.mailtracking.domain.MailTracking playsRole mailTracking;
}

relation MailTrackingOperators {
	module.mailtracking.domain.MailTracking playsRole mailTrackingForOperations {
        multiplicity *;
    }
	protected org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole operatorsAccessGroup {
		multiplicity 1..1;
	}
}

relation MailTrackingViewers {
	module.mailtracking.domain.MailTracking playsRole mailTrackingForView {
        multiplicity *;
    }
	protected org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole viewersAccessGroup {
		multiplicity 1..1;
	}
}

relation MailTrackingManagers {
	module.mailtracking.domain.MailTracking playsRole mailTrackingForManagement{
        multiplicity *;
    }
	protected org.fenixedu.bennu.core.domain.groups.PersistentGroup playsRole managersAccessGroup {
		multiplicity 1..1;
	}
}

relation MaiTrackingCorrespondenceEntry {
	module.mailtracking.domain.MailTracking playsRole mailTracking;
	module.mailtracking.domain.CorrespondenceEntry playsRole entries {
		multiplicity *;
	}
}

relation CorrespondenceEntryUserCreator {
	module.mailtracking.domain.CorrespondenceEntry playsRole createdCorrespondenceEntries {
		multiplicity *;
	}
	
	org.fenixedu.bennu.core.domain.User playsRole creator;
}

relation CorrespondenceEntryLastEditor {
	module.mailtracking.domain.CorrespondenceEntry playsRole editedCorrespondenceEntries {
		multiplicity *;
	}
	
	org.fenixedu.bennu.core.domain.User playsRole lastEditor;
}

relation CorrespondenceEntryDeletionResponsible {
	module.mailtracking.domain.CorrespondenceEntry playsRole deletedCorrespondenceEntries {
		multiplicity *;
	}
	
	org.fenixedu.bennu.core.domain.User playsRole deletionResponsible;
}

relation CorrespondenceEntryOwner {
	module.organization.domain.Person playsRole owner;
	module.mailtracking.domain.CorrespondenceEntry playsRole entries {
		multiplicity *;
	}
}

relation BennuMailTrackingYears {
	org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
	module.mailtracking.domain.Year playsRole years {
		multiplicity *;
	}
} 

relation MailTrackingYear {
	module.mailtracking.domain.MailTracking playsRole mailTracking;
	module.mailtracking.domain.Year playsRole years {
		multiplicity *;
	}
}

relation YearCorrespondenceEntry {
	module.mailtracking.domain.CorrespondenceEntry playsRole entries {
		multiplicity *;
	}
	
	module.mailtracking.domain.Year playsRole year;
}
